/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/appValidation.ts":
/*!******************************!*\
  !*** ./src/appValidation.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.verifyLicenseKey = exports.isAppActivated = void 0;\r\nconst fs = __importStar(__webpack_require__(/*! fs */ \"fs\"));\r\nconst logger_1 = __webpack_require__(/*! ./app/config/logger */ \"./src/app/config/logger.ts\");\r\nconst electronConstants_1 = __webpack_require__(/*! ./electronConstants */ \"./src/electronConstants.ts\");\r\nconst network_1 = __webpack_require__(/*! ./utils/network */ \"./src/utils/network.ts\");\r\n//check if the database file exists. if it does, then the app has been validated.\r\nconst isAppActivated = () => {\r\n    return fs.existsSync(electronConstants_1.constants.db_path);\r\n};\r\nexports.isAppActivated = isAppActivated;\r\nfunction verifyLicenseKey(key) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            console.log(\"calling verify license\");\r\n            return (0, network_1.getData)({ url: `${electronConstants_1.constants.server_url}/api_admin/findBranchByKey?k=${key}`, token: \"\" });\r\n        }\r\n        catch (error) {\r\n            console.log(\"verify key\", error);\r\n            logger_1.logger.error({ message: error });\r\n            throw new Error(error);\r\n        }\r\n    });\r\n} //3Wordsnocaps!\r\nexports.verifyLicenseKey = verifyLicenseKey;\r\n\n\n//# sourceURL=webpack://druglaneserver/./src/appValidation.ts?");

/***/ }),

/***/ "./src/app/config/logger.ts":
/*!**********************************!*\
  !*** ./src/app/config/logger.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.logger = void 0;\r\nconst electronConstants_1 = __webpack_require__(/*! @/electronConstants */ \"./src/electronConstants.ts\");\r\nconst dateHelper_1 = __webpack_require__(/*! @/utils/dateHelper */ \"./src/utils/dateHelper.ts\");\r\nconst path_1 = __importDefault(__webpack_require__(/*! path */ \"path\"));\r\nconst winston = __importStar(__webpack_require__(/*! winston */ \"winston\"));\r\nconst defaultFormat = winston.format.combine(winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }), winston.format.align(), winston.format.printf(info => `${info.level}: ${[info.timestamp]}: ${info.message}`));\r\nconst logger = winston.createLogger({\r\n    transports: [\r\n        //\r\n        // - Write all logs with importance level of `error` or less to `error.log`\r\n        // - Write all logs with importance level of `info` or less to `combined.log`\r\n        //\r\n        new winston.transports.File({\r\n            filename: path_1.default.resolve(electronConstants_1.constants.settings_location, 'logs', 'ui', `${(0, dateHelper_1.getToday)()} debug.log`),\r\n            level: 'debug',\r\n            format: defaultFormat,\r\n        }),\r\n        new winston.transports.File({\r\n            filename: path_1.default.resolve(electronConstants_1.constants.settings_location, 'logs', 'ui', `${(0, dateHelper_1.getToday)()} info.log`),\r\n            level: 'info',\r\n            format: defaultFormat,\r\n        }),\r\n        new winston.transports.File({\r\n            filename: path_1.default.resolve(electronConstants_1.constants.settings_location, 'logs', 'ui', `${(0, dateHelper_1.getToday)()} error.log`),\r\n            level: 'error',\r\n            format: defaultFormat,\r\n        }),\r\n    ],\r\n});\r\nexports.logger = logger;\r\n//\r\n// If we're not in production then log to the `console` with the format:\r\n// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `\r\n//\r\nif (true) {\r\n    logger.add(new winston.transports.Console({\r\n        format: defaultFormat,\r\n    }));\r\n}\r\n\n\n//# sourceURL=webpack://druglaneserver/./src/app/config/logger.ts?");

/***/ }),

/***/ "./src/electronConstants.ts":
/*!**********************************!*\
  !*** ./src/electronConstants.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.constants = exports.defaultOptions = void 0;\r\nconst PORT = process.env.PORT || 5100;\r\n// const appName = \"Shoplane\";\r\n// const appLongName = \"Shoplane POS & Inventory Management System\";\r\n// const databaseName = \"shoplane.db\";\r\nconst path_1 = __importDefault(__webpack_require__(/*! path */ \"path\"));\r\nconst os_1 = __importDefault(__webpack_require__(/*! os */ \"os\"));\r\nconst appName = \"Druglane\";\r\nconst appLongName = \"Druglane Pharmacy Management System\";\r\nconst databaseName = \"druglanev1.db\";\r\nconst appDirectory = \"druglaneServerV1\";\r\nconst settings_location = path_1.default.join(process.env.APPDATA, appDirectory);\r\nexports.defaultOptions = {\r\n    \"port\": 5000,\r\n    \"backup_time\": 19\r\n};\r\nexports.constants = {\r\n    appLongName: appLongName,\r\n    appname: appName,\r\n    server_url: \"https://druglanepms.calgadsoftwares.com\",\r\n    // process.env.NODE_ENV == \"development\" ? \r\n    //      \"http://localhost/druglanebackend\" : \"https://druglanepms.calgadsoftwares.com\",\r\n    settings_location,\r\n    customer_image_url: \"assets/customer_images/\",\r\n    customer_image_thumbnail_url: \"assets/customer_images/thumbnails/\",\r\n    product_image_url: \"assets/product_images/\",\r\n    product_image_thumbnail_url: \"assets/product_images/thumbnails/\",\r\n    port: PORT,\r\n    firebase_user_collection: \"users\",\r\n    firebase_requests_collection: \"requests\",\r\n    firebase_responses_collection: \"responses\",\r\n    db_path: path_1.default.join(settings_location, databaseName),\r\n    backup_folder: path_1.default.join(os_1.default.homedir(), `${appName}Backups`),\r\n    settings_filename: 'system-settings.json',\r\n    db_filename: databaseName,\r\n    internal_backups_path: path_1.default.join(settings_location, 'backups'),\r\n    company_id: '',\r\n    STRING_DB_VERSION: \"dbversion\",\r\n};\r\n\n\n//# sourceURL=webpack://druglaneserver/./src/electronConstants.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.loadActivationPage = exports.spawnServer = void 0;\r\nconst electron_1 = __importStar(__webpack_require__(/*! electron */ \"electron\"));\r\nconst path = __importStar(__webpack_require__(/*! path */ \"path\"));\r\nconst child_process_1 = __webpack_require__(/*! child_process */ \"child_process\");\r\nconst appValidation_1 = __webpack_require__(/*! ./appValidation */ \"./src/appValidation.ts\");\r\nconst logger_1 = __webpack_require__(/*! ./app/config/logger */ \"./src/app/config/logger.ts\");\r\n// import isDev from 'electron-is-dev';\r\nconst electronConstants_1 = __webpack_require__(/*! ./electronConstants */ \"./src/electronConstants.ts\");\r\nconst ServerEvents_1 = __webpack_require__(/*! ./utils/ServerEvents */ \"./src/utils/ServerEvents.ts\");\r\nconst stringKeys_1 = __webpack_require__(/*! ./utils/stringKeys */ \"./src/utils/stringKeys.ts\");\r\nconst directorySetup_1 = __webpack_require__(/*! ./utils/directorySetup */ \"./src/utils/directorySetup.ts\");\r\nconst electron_store_1 = __importDefault(__webpack_require__(/*! electron-store */ \"electron-store\"));\r\nconst electron_context_menu_1 = __importDefault(__webpack_require__(/*! electron-context-menu */ \"electron-context-menu\"));\r\n//A78D5-B93FB-CD281-3500A\r\n// import { startServer } from \"./server/server\";\r\nconst gotTheLock = electron_1.app.requestSingleInstanceLock();\r\n/**keep track of the server url and make sure it only updates the ui if there's an actual change */\r\nlet lastServerUrl = \"\";\r\nlet mainWindow;\r\nlet serverProcess;\r\nlet serverState = \"Checking Activation\";\r\nconst isDev = \"development\" == \"development\";\r\n//the first instance of the app will have gotTheLock = true. else it will be fls\r\nif (!gotTheLock) {\r\n    electron_1.app.quit();\r\n}\r\nelse {\r\n    electron_1.app.on('second-instance', (event, commandLine, workingDirectory) => {\r\n        // Someone tried to run a second instance, we should focus our window.\r\n        if (mainWindow != null && mainWindow != undefined) {\r\n            if (mainWindow.isMinimized()) {\r\n                mainWindow.restore();\r\n            }\r\n            mainWindow.focus();\r\n        }\r\n    });\r\n}\r\nconst serverEventEmitter = new ServerEvents_1.ServerEvents();\r\nlet serverUrl = \"\";\r\nconst store = new electron_store_1.default();\r\n//save all \r\nlet logs = [];\r\n(0, electron_context_menu_1.default)({\r\n    showSaveImageAs: true\r\n});\r\n//create backup folders\r\n(0, directorySetup_1.runFolderCreation)();\r\nelectron_1.ipcMain.on(stringKeys_1.CALL_ACTIVATION, (event, key) => __awaiter(void 0, void 0, void 0, function* () {\r\n    var _a, _b;\r\n    try {\r\n        let data = yield (0, appValidation_1.verifyLicenseKey)(key);\r\n        (_a = mainWindow === null || mainWindow === void 0 ? void 0 : mainWindow.webContents) === null || _a === void 0 ? void 0 : _a.send(stringKeys_1.ACTIVATION_RESULT, { data: data.data, error: false, message: \"\" });\r\n    }\r\n    catch (error) {\r\n        (_b = mainWindow === null || mainWindow === void 0 ? void 0 : mainWindow.webContents) === null || _b === void 0 ? void 0 : _b.send(stringKeys_1.ACTIVATION_RESULT, { data: null, error: true, message: error });\r\n    }\r\n}));\r\nelectron_1.ipcMain.on(stringKeys_1.GET_APP_DETAILS, getAppDetails);\r\nelectron_1.ipcMain.on(stringKeys_1.GET_SERVER_STATE, () => {\r\n    sendServerState(serverState);\r\n});\r\nelectron_1.ipcMain.on(stringKeys_1.RESTART_SERVER, (event, data) => __awaiter(void 0, void 0, void 0, function* () {\r\n    yield spawnServer();\r\n}));\r\nelectron_1.ipcMain.on(stringKeys_1.RESTART_APPLICATION, (event, data) => __awaiter(void 0, void 0, void 0, function* () {\r\n    restartApp();\r\n}));\r\nelectron_1.ipcMain.on(stringKeys_1.GET_SERVER_URL, sendServerUrl);\r\nelectron_1.ipcMain.on(stringKeys_1.GET_PREFERENCE, (event, data) => {\r\n    let value = store.get(data.key, electronConstants_1.defaultOptions[data.key]);\r\n    event.reply(stringKeys_1.PREFERENCE_RECEIVED, { name: data.key, value: value });\r\n});\r\nelectron_1.ipcMain.on(stringKeys_1.GET_PREFERENCES, (event) => {\r\n    store.openInEditor();\r\n});\r\nelectron_1.ipcMain.on(stringKeys_1.SET_PREFERENCE, (event, data) => {\r\n    try {\r\n        savePreference(data.key, data.value);\r\n        event.reply(stringKeys_1.PREFERENCE_SET, { success: true, message: \"Setting saved successfully\" });\r\n    }\r\n    catch (error) {\r\n        event.reply(stringKeys_1.PREFERENCE_SET, { success: false, message: error });\r\n    }\r\n});\r\nelectron_1.ipcMain.on(stringKeys_1.SET_ADMIN_PASSWORD, (event, data) => {\r\n});\r\nfunction savePreference(key, value) {\r\n    try {\r\n        console.log(key, value);\r\n        store.set(key, value);\r\n    }\r\n    catch (error) {\r\n        throw new Error(error);\r\n    }\r\n}\r\nfunction getAppDetails() {\r\n    var _a;\r\n    const title = `${electronConstants_1.constants.appname} v${electron_1.app.getVersion()}`;\r\n    (_a = mainWindow === null || mainWindow === void 0 ? void 0 : mainWindow.webContents) === null || _a === void 0 ? void 0 : _a.send(\"appDetailsSent\", { title });\r\n}\r\nfunction restartApp() {\r\n    electron_1.app.relaunch();\r\n    electron_1.app.exit();\r\n}\r\nfunction sendServerState(state) {\r\n    var _a;\r\n    console.log('server state', state);\r\n    (_a = mainWindow === null || mainWindow === void 0 ? void 0 : mainWindow.webContents) === null || _a === void 0 ? void 0 : _a.send(stringKeys_1.SERVER_STATE_CHANGED, { data: state, time: new Date().toLocaleString() });\r\n}\r\nserverEventEmitter.on(stringKeys_1.SERVER_STATE_CHANGED, (data) => {\r\n    logs.unshift(data);\r\n    serverState = data;\r\n    sendServerState(data);\r\n});\r\nserverEventEmitter.on(stringKeys_1.SERVER_MESSAGE_RECEIVED, (data) => {\r\n    var _a;\r\n    logs.unshift(data);\r\n    (_a = mainWindow === null || mainWindow === void 0 ? void 0 : mainWindow.webContents) === null || _a === void 0 ? void 0 : _a.send(stringKeys_1.SERVER_MESSAGE_RECEIVED, { data, time: new Date().toLocaleString() });\r\n});\r\nserverEventEmitter.on(stringKeys_1.SERVER_URL_UPDATED, (data) => {\r\n    serverUrl = data;\r\n    logs.unshift(data);\r\n    if (lastServerUrl !== serverUrl) {\r\n        sendServerUrl();\r\n        lastServerUrl = serverUrl;\r\n    }\r\n});\r\nfunction sendServerUrl() {\r\n    var _a;\r\n    (_a = mainWindow === null || mainWindow === void 0 ? void 0 : mainWindow.webContents) === null || _a === void 0 ? void 0 : _a.send(stringKeys_1.SERVER_URL_RECEIVED, { data: serverUrl, time: new Date().toLocaleString() }, serverUrl);\r\n}\r\nfunction createWindow(htmlLocation, preloadLocation) {\r\n    var _a;\r\n    // Create the browser window.\r\n    //TODO: Check if null.\r\n    mainWindow = new electron_1.BrowserWindow({\r\n        height: 600,\r\n        webPreferences: {\r\n            nodeIntegration: true,\r\n            contextIsolation: false,\r\n            spellcheck: true\r\n            //  preload: path.join(__dirname, \"preload.js\"),\r\n        },\r\n        width: 800,\r\n    });\r\n    // and load the index.html of the app.\r\n    // mainWindow.loadFile(path.join(__dirname, htmlLocation));\r\n    mainWindow === null || mainWindow === void 0 ? void 0 : mainWindow.loadURL(isDev ? 'http://localhost:9000' : `file://${electron_1.app.getAppPath()}/index.html`);\r\n    // Open the DevTools.\r\n    (_a = mainWindow === null || mainWindow === void 0 ? void 0 : mainWindow.webContents) === null || _a === void 0 ? void 0 : _a.openDevTools();\r\n    if (!isDev)\r\n        electron_1.Menu.setApplicationMenu(null);\r\n    mainWindow.webContents.setWindowOpenHandler((details) => {\r\n        electron_1.default.shell.openExternal(details.url);\r\n        return { action: 'deny' };\r\n    });\r\n}\r\n// This method will be called when Electron has finished\r\n// initialization and is ready to create browser windows.\r\n// Some APIs can only be used after this event occurs.\r\nelectron_1.app.whenReady().then(() => {\r\n    createWindow(\"/app/index.html\", \"@/app/index.preload.js\");\r\n    spawnServer();\r\n    electron_1.app.on(\"activate\", function () {\r\n        // On macOS it's common to re-create a window in the app when the\r\n        // dock icon is clicked and there are no other windows open.\r\n        if (electron_1.BrowserWindow.getAllWindows().length === 0)\r\n            createWindow(\"/app/index.html\", \"@/app/index.preload.js\");\r\n        spawnServer();\r\n    });\r\n    //\r\n});\r\n// Quit when all windows are closed, except on macOS. There, it's common\r\n// for applications and their menu bar to stay active until the user quits\r\n// explicitly with Cmd + Q.\r\nelectron_1.app.on(\"window-all-closed\", () => {\r\n    if (process.platform !== \"darwin\") {\r\n        //kill the server process\r\n        if (serverProcess) {\r\n            try {\r\n                serverProcess.kill();\r\n                logger_1.logger.info({ message: \"app terminated\" });\r\n                electron_1.app.quit();\r\n            }\r\n            catch (error) {\r\n                logger_1.logger.error({ message: error });\r\n            }\r\n        }\r\n        else {\r\n            logger_1.logger.info({ message: \"no server was running. app terminated\" });\r\n            electron_1.app.quit();\r\n        }\r\n    }\r\n});\r\n// In this file you can include the rest of your app\"s specific main process\r\n// code. You can also put them in separate files and require them here.\r\n// startServer();\r\nfunction spawnServer() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            serverEventEmitter.emit(stringKeys_1.SERVER_STATE_CHANGED, \"Checking Activation\");\r\n            //check if the app is activated. if it is, start the server. else go the activation page\r\n            const appActivated = yield (0, appValidation_1.isAppActivated)();\r\n            if (appActivated) {\r\n                serverEventEmitter.emit(stringKeys_1.SERVER_STATE_CHANGED, \"Server Starting\");\r\n                //spawn server->runmigrations\r\n                const serverPath = path.join(__dirname, 'server/server');\r\n                serverProcess = (0, child_process_1.fork)(serverPath);\r\n                serverProcess.on('exit', (code, signal) => {\r\n                    logger_1.logger.error({\r\n                        message: 'serverProcess process exited with ' +\r\n                            `code ${code} and signal ${signal}`\r\n                    });\r\n                    serverEventEmitter.emit(stringKeys_1.SERVER_STATE_CHANGED, \"Server Stopped\");\r\n                });\r\n                serverProcess.on('error', (error) => {\r\n                    serverEventEmitter.emit(stringKeys_1.SERVER_STATE_CHANGED, \"Server Error\");\r\n                    console.log('serverProcess process error ', error);\r\n                });\r\n                serverProcess.on('spawn', () => {\r\n                    serverEventEmitter.emit(stringKeys_1.SERVER_STATE_CHANGED, \"Server Running\");\r\n                    console.log('serverProcess spawned');\r\n                    //TODO: check if the company details has been set. then check if the admin password has been set\r\n                });\r\n                serverProcess.on('disconnect', () => {\r\n                    serverEventEmitter.emit(stringKeys_1.SERVER_STATE_CHANGED, \"Server Disconnected\");\r\n                    console.log('serverProcess disconnected');\r\n                    spawnServer();\r\n                });\r\n                serverProcess.on('message', (message, handle) => {\r\n                    console.log(\"serverProcess sent a message\", message);\r\n                    serverEventEmitter.emit(message.event, message.message);\r\n                });\r\n            }\r\n            else {\r\n                serverEventEmitter.emit(stringKeys_1.SERVER_STATE_CHANGED, \"App not activated\");\r\n                console.log(\"app not activated\");\r\n                loadActivationPage();\r\n            }\r\n        }\r\n        catch (error) {\r\n            //start the server the old fashioned way\r\n            serverEventEmitter.emit(stringKeys_1.SERVER_STATE_CHANGED, \"Server Error \" + error);\r\n            console.log(error);\r\n        }\r\n    });\r\n}\r\nexports.spawnServer = spawnServer;\r\nfunction loadActivationPage() {\r\n    createWindow(\"/app/activate.html\", \"/app/activate.js\");\r\n}\r\nexports.loadActivationPage = loadActivationPage;\r\n\n\n//# sourceURL=webpack://druglaneserver/./src/main.ts?");

/***/ }),

/***/ "./src/utils/ServerEvents.ts":
/*!***********************************!*\
  !*** ./src/utils/ServerEvents.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ServerEvents = void 0;\r\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\r\nclass ServerEvents extends stream_1.EventEmitter {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\nexports.ServerEvents = ServerEvents;\r\n\n\n//# sourceURL=webpack://druglaneserver/./src/utils/ServerEvents.ts?");

/***/ }),

/***/ "./src/utils/constants.ts":
/*!********************************!*\
  !*** ./src/utils/constants.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.constants = void 0;\r\nconst PORT = process.env.PORT || 5100;\r\n// const appName = \"Shoplane\";\r\n// const appLongName = \"Shoplane POS & Inventory Management System\";\r\n// const databaseName = \"shoplane.db\";\r\nconst path_1 = __importDefault(__webpack_require__(/*! path */ \"path\"));\r\nconst os_1 = __importDefault(__webpack_require__(/*! os */ \"os\"));\r\nconst appName = \"Druglane\";\r\nconst appLongName = \"Druglane Pharmacy Management System\";\r\nconst databaseName = \"druglanev1.db\";\r\nconst appDirectory = \"druglaneServerV1\";\r\nconst settings_location = path_1.default.join(process.env.APPDATA, appDirectory);\r\nexports.constants = {\r\n    appLongName: appLongName,\r\n    appname: appName,\r\n    server_url:  false ?\r\n        0 : \"http://localhost/druglanebackend\",\r\n    settings_location,\r\n    customer_image_url: \"assets/customer_images/\",\r\n    customer_image_thumbnail_url: \"assets/customer_images/thumbnails/\",\r\n    product_image_url: \"assets/product_images/\",\r\n    product_image_thumbnail_url: \"assets/product_images/thumbnails/\",\r\n    port: PORT,\r\n    firebase_user_collection: \"users\",\r\n    firebase_requests_collection: \"requests\",\r\n    firebase_responses_collection: \"responses\",\r\n    settings_path: path_1.default.join(settings_location, 'system-settings.json'),\r\n    db_path: path_1.default.join(settings_location, databaseName),\r\n    backup_folder: path_1.default.join(os_1.default.homedir(), `${appName}Backups`),\r\n    settings_filename: 'system-settings.json',\r\n    db_filename: databaseName,\r\n    internal_backups_path: path_1.default.join(settings_location, 'backups'),\r\n    backup_temp_location: path_1.default.join(settings_location, 'backupRestoreTemp'),\r\n    company_id: '',\r\n    default_functional_groups: [\r\n        \"Adult Analgesics Tablets\",\r\n        \"Adult Analgesics Suppositories\",\r\n        \"Paediatric Analgesics Syrups\",\r\n        \"Paediatric Analgesics Suppositories\",\r\n        \"Adult Dry Cough Syrups\",\r\n        \"Adult Expectorant Syups\",\r\n        \"Adult Cough & Cold Syrups\",\r\n        \"Adult Dry Cough Tablets\",\r\n        \"Adult Expectorant Tablets\",\r\n        \"Adult Cough & Cold Tablets\",\r\n        \"Baby Cough Syrups (0-1 years)\",\r\n        \"Child Cough Syrups (up to 6 years)\",\r\n        \"Child Cough Syrups (up to 12 years)\",\r\n        \"Adult Catarrh Syrups\",\r\n        \"Adult Catarrh Tablets\",\r\n        \"Paediatric Catarrh Syrups\",\r\n        \"Adult Blood Tonics\",\r\n        \"Adult Multivitamins\",\r\n        \"Paediatric Blood Tonics\",\r\n        \"Paediatric Multivitamins\"\r\n    ],\r\n    default_config: {\r\n        port: PORT,\r\n        host: \"localhost\",\r\n        dbversion: 0,\r\n        admin_set: 'no',\r\n        company_set: 'no',\r\n        auto_backup_time: 19,\r\n        last_sync: 0,\r\n        env: \"production\"\r\n    },\r\n    PERMISSION_VIEW_USER_ACTIVITIES: \"View Sales History\",\r\n    PERMISSION_VIEW_PURCHASE_HISTORY: \"View Purchase History\",\r\n    PERMISSION_VIEW_INVENTORY: \"View Inventory\",\r\n    PERMISSION_VIEW_END_OF_DAY_REPORT: \"View End Of Day Report\",\r\n    PERMISSION_VIEW_ACCOUNTS: \"View Accounts\",\r\n    PERMISSION_TRANSFER_ITEMS: \"Transfer Items\",\r\n    PERMISSION_RETURN_SOLD_ITEMS: \"Return Sold Items\",\r\n    PERMISSION_RECEIVE_TRANSFERS: \"Receive Transfers\",\r\n    PERMISSION_RECEIVE_PURCHASES: \"Receive Purchases\",\r\n    PERMISSION_MANAGE_VENDORS: \"Manage Vendors\",\r\n    PERMISSION_MANAGE_STAFF: \"Manage Staff\",\r\n    PERMISSION_MANAGE_SETTINGS: \"Manage Settings\",\r\n    PERMISSION_MANAGE_INVENTORY: \"Manage Inventory\",\r\n    PERMISSION_MANAGE_CUSTOMERS: \"Manage Customers\",\r\n    PERMISSION_MANAGE_ACCOUNTS: \"Manage Accounts\",\r\n    PERMISSION_GIVE_DISCOUNT: \"Give Discount\",\r\n    PERMISSION_EDIT_SALES: \"Edit Sales\",\r\n    PERMISSION_DELETE_TRANSFERS: \"Delete Transfers\",\r\n    PERMISSION_DELETE_SALES_RECORDS: \"Sales Records\",\r\n    PERMISSION_DELETE_PURCHASES: \"Delete Purchases\",\r\n    PERMISSION_CREATE_SALES: \"Create Sales\",\r\n    PERMISSION_ADJUST_STOCK: \"Adjust Stock\",\r\n    PERMISSION_VIEW_TRANSFER_HISTORY: \"View Transfer History\",\r\n    PERMISSION_VIEW_SALES_REPORTS: \"View Sales Reports\",\r\n    PERMISSION_VIEW_SALES_HISTORY: \"View Sales History\",\r\n    STRING_DB_VERSION: \"dbversion\",\r\n};\r\n\n\n//# sourceURL=webpack://druglaneserver/./src/utils/constants.ts?");

/***/ }),

/***/ "./src/utils/dateHelper.ts":
/*!*********************************!*\
  !*** ./src/utils/dateHelper.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.setDates = exports.getWeekNumber = exports.addTimePeriod = exports.subtractTimePeriod = exports.formatDate = exports.timeBetweenDates = exports.compareDates = exports.getThisYear = exports.getLastDayOfMonth = exports.getAge = exports.getMonthsNoPad = exports.getMonthsObjects = exports.getDatesBetween = exports.nth = exports.getDays = exports.getMonths = exports.getDayName = exports.getMonthName = exports.padZero = exports.getToday = exports.formatDateTime = exports.addDaystoDate = exports.getFirstDayOfWeek = void 0;\r\n/**\r\n * get the date of the first sunday of the week\r\n * @param {number} weekNum the week number in the year\r\n * @param {number} year the current year\r\n * @returns  {Date} the date of the first day of the week\r\n */\r\nfunction getFirstDayOfWeek(weekNum, year) {\r\n    let firstDay = new Date(year, 0, (1 + (weekNum - 1) * 7));\r\n    while (firstDay.getDay() !== 0) {\r\n        firstDay.setDate(firstDay.getDate() - 1);\r\n    }\r\n    return firstDay;\r\n}\r\nexports.getFirstDayOfWeek = getFirstDayOfWeek;\r\n/**\r\n * add a number of days to a given date and return the\r\n * new date\r\n */\r\nfunction addDaystoDate(days, date) {\r\n    let dat = new Date(date);\r\n    dat.setDate(dat.getDate() + days);\r\n    return dat;\r\n}\r\nexports.addDaystoDate = addDaystoDate;\r\n/**\r\n * format the datetime and return the string without the T\r\n * e.g. 2022-11-15T04:05:00 -> 2022-11-15 04:05:00\r\n * @param {string} date the date\r\n * @returns {string}\r\n */\r\nfunction formatDateTime(date) {\r\n    return (new Date(date)).toISOString().slice(0, 19).replace(\"T\", \" \");\r\n}\r\nexports.formatDateTime = formatDateTime;\r\n/**\r\n * format a date and return the string representation. timestamp = yyyy-mm-dd hh-ii-ss\r\n * timestamp_string = yyyymmddhhiiss\r\n * month = mm\r\n * default = yyyy-mm-dd\r\n * @param type string a format type. options are timestamp, timestamp_string, month, or empty string ''\r\n * @param date\r\n * @returns {string}\r\n */\r\nfunction getToday(type = '', date = null) {\r\n    let today = new Date();\r\n    if (date != null) {\r\n        today = new Date(date);\r\n    }\r\n    let dd = today.getDate();\r\n    let mm = today.getMonth() + 1; //January is 0!\r\n    let yyyy = today.getFullYear();\r\n    let dd_string;\r\n    if (dd < 10) {\r\n        dd_string = '0' + dd;\r\n    }\r\n    else {\r\n        dd_string = dd.toString();\r\n    }\r\n    let mm_string;\r\n    if (mm < 10) {\r\n        mm_string = '0' + mm;\r\n    }\r\n    else {\r\n        mm_string = mm.toString();\r\n    }\r\n    let hrs = \"\", mins = \"\", secs = \"\";\r\n    switch (type) {\r\n        case \"timestamp\":\r\n            hrs = padZero(today.getHours());\r\n            mins = padZero(today.getMinutes());\r\n            secs = padZero(today.getSeconds());\r\n            return yyyy + '-' + mm_string + '-' + dd_string + ' ' + hrs + ':' + mins + ':' + secs;\r\n        case \"timestamp_string\":\r\n            hrs = padZero(today.getHours());\r\n            mins = padZero(today.getMinutes());\r\n            secs = padZero(today.getSeconds());\r\n            return yyyy + '' + mm_string + '' + dd_string + '' + hrs + '' + mins + '' + secs;\r\n        case \"month\":\r\n            return mm_string;\r\n        default:\r\n            return yyyy + '-' + mm_string + '-' + dd_string;\r\n    }\r\n    // mm_string+'/'+dd_string+'/'+yyyy;\r\n}\r\nexports.getToday = getToday;\r\n/**\r\n * add a zero to a month number up to 2 digits\r\n * @param m string the month number as a string or int\r\n * @returns string\r\n */\r\nfunction padZero(m) {\r\n    let str = m.toString();\r\n    return str.padStart(2, \"0\");\r\n}\r\nexports.padZero = padZero;\r\n/**\r\n * get the name of the month using the number\r\n * @param m the month number. January is 1, december is 12\r\n * @returns\r\n */\r\nfunction getMonthName(m) {\r\n    try {\r\n        let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        if (monthNames[m - 1] == undefined) {\r\n            throw new Error(\"Number not found\");\r\n        }\r\n        return monthNames[m - 1];\r\n    }\r\n    catch (error) {\r\n        throw new Error(\"Number not found\");\r\n    }\r\n}\r\nexports.getMonthName = getMonthName;\r\n/**\r\n * get the name of a day using the number\r\n * @param {number} d the day number. sunday is 0... saturday is 6\r\n * @returns {string}\r\n */\r\nfunction getDayName(d) {\r\n    try {\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        if (days[d] == undefined) {\r\n            throw new Error(\"Number not found\");\r\n        }\r\n        return days[d];\r\n    }\r\n    catch (error) {\r\n        throw new Error(\"Number not found\");\r\n    }\r\n}\r\nexports.getDayName = getDayName;\r\n/**\r\n * get the list of month names\r\n * @returns {string[]}\r\n */\r\nfunction getMonths() {\r\n    return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ];\r\n}\r\nexports.getMonths = getMonths;\r\n/**\r\n * get the list of days starting from sunday\r\n * @returns {string[]} the list of day names starting from Sunday\r\n */\r\nfunction getDays() {\r\n    return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n}\r\nexports.getDays = getDays;\r\n/**\r\n * get the ordinal of a number. e.g. 1st, 2nd, 3rd, 4th\r\n * @param {number} d the day number\r\n * @returns {string}\r\n */\r\nfunction nth(d) {\r\n    if (d > 3 && d < 21)\r\n        return 'th';\r\n    switch (d % 10) {\r\n        case 1: return \"st\";\r\n        case 2: return \"nd\";\r\n        case 3: return \"rd\";\r\n        default: return \"th\";\r\n    }\r\n}\r\nexports.nth = nth;\r\n;\r\n/**\r\n * get the list of days between 2 specified dates\r\n * @param {string|Date} startDate the start date - string or date\r\n * @param {string | Date} stopDate the end date - string or date\r\n * @returns {string[]}\r\n */\r\nfunction getDatesBetween(startDate, stopDate) {\r\n    let dateArray = [];\r\n    let currentDate = typeof (startDate) == 'string' ? new Date(startDate) : startDate;\r\n    let endDate = typeof (stopDate) == 'string' ? new Date(stopDate) : stopDate;\r\n    while (currentDate <= endDate) {\r\n        dateArray.push(getToday('', currentDate));\r\n        currentDate = new Date(currentDate.getDate() + 1);\r\n    }\r\n    return dateArray;\r\n}\r\nexports.getDatesBetween = getDatesBetween;\r\n/**\r\n * return the list of months from January to December as objects with id, name\r\n * @returns {Month[]}\r\n */\r\nfunction getMonthsObjects() {\r\n    let months = [];\r\n    months.push({ id: \"01\", name: 'January' });\r\n    months.push({ id: \"02\", name: 'February' });\r\n    months.push({ id: \"03\", name: 'March' });\r\n    months.push({ id: \"04\", name: 'April' });\r\n    months.push({ id: \"05\", name: 'May' });\r\n    months.push({ id: \"06\", name: 'June' });\r\n    months.push({ id: \"07\", name: 'July' });\r\n    months.push({ id: \"08\", name: 'August' });\r\n    months.push({ id: \"09\", name: 'September' });\r\n    months.push({ id: \"10\", name: 'October' });\r\n    months.push({ id: \"11\", name: 'November' });\r\n    months.push({ id: \"12\", name: 'December' });\r\n    return months;\r\n}\r\nexports.getMonthsObjects = getMonthsObjects;\r\n//remove the 0's from the month ids\r\n/**\r\n * get the list of month objects but with no zero padding for the id\r\n * @returns {Month[]}\r\n */\r\nfunction getMonthsNoPad() {\r\n    let months = [];\r\n    months.push({ id: \"1\", name: 'January' });\r\n    months.push({ id: \"2\", name: 'February' });\r\n    months.push({ id: \"3\", name: 'March' });\r\n    months.push({ id: \"4\", name: 'April' });\r\n    months.push({ id: \"5\", name: 'May' });\r\n    months.push({ id: \"6\", name: 'June' });\r\n    months.push({ id: \"7\", name: 'July' });\r\n    months.push({ id: \"8\", name: 'August' });\r\n    months.push({ id: \"9\", name: 'September' });\r\n    months.push({ id: \"10\", name: 'October' });\r\n    months.push({ id: \"11\", name: 'November' });\r\n    months.push({ id: \"12\", name: 'December' });\r\n    return months;\r\n}\r\nexports.getMonthsNoPad = getMonthsNoPad;\r\n/**\r\n * get the number of years past from the given date\r\n * @param dateString the date of birth\r\n * @returns {number} the number of years up to today\r\n */\r\nfunction getAge(dateString) {\r\n    let today = new Date();\r\n    let birthDate = new Date(dateString);\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    let m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }\r\n    return age;\r\n}\r\nexports.getAge = getAge;\r\n/**\r\n * get the day component of the ending date of the month\r\n* @param monthNumber January = 1, December  = 12\r\n * @returns {Number}\r\n */\r\nfunction getLastDayOfMonth(monthNumber) {\r\n    let month = typeof (monthNumber) == 'string' ? parseInt(monthNumber) : monthNumber;\r\n    let thirty_days = [9, 4, 6, 11];\r\n    if (month == 2) {\r\n        return 28;\r\n    }\r\n    else if (thirty_days.indexOf(month) != -1) {\r\n        return 30;\r\n    }\r\n    else {\r\n        return 31;\r\n    }\r\n}\r\nexports.getLastDayOfMonth = getLastDayOfMonth;\r\n/**\r\n * get the current year\r\n * @returns {number}\r\n */\r\nfunction getThisYear() {\r\n    return new Date().getFullYear();\r\n}\r\nexports.getThisYear = getThisYear;\r\n/**\r\n * check if date1 is before, after or same as date2. date2 defaults to current day\r\n * @param date1 the first date\r\n * @param date2 the second date\r\n * @returns {string} 'before'|'after'|'same'\r\n */\r\nfunction compareDates(date1, date2) {\r\n    let d1 = new Date(date1);\r\n    let d2 = date2 == undefined ? new Date() : new Date(date2);\r\n    if (d1 < d2) {\r\n        return 'before';\r\n    }\r\n    else if (d1 > d2) {\r\n        return 'after';\r\n    }\r\n    else {\r\n        return 'same';\r\n    }\r\n}\r\nexports.compareDates = compareDates;\r\n/**\r\n * get the number of days, seconds, minutes between 2 dates\r\n * @param {string} date1 the date we're interested in\r\n * @param {string} date2 defaults to the current day\r\n * @param {string} format defaults to seconds. could be days, minutes, seconds\r\n * @returns {number} the number of {format}s between the dats\r\n */\r\nfunction timeBetweenDates(date1, date2 = '', format = 'seconds') {\r\n    let d1 = new Date(date1);\r\n    let d2 = new Date();\r\n    if (date2 != '') {\r\n        d2 = new Date(date2);\r\n    }\r\n    switch (format) {\r\n        case 'days':\r\n            return (d1.getTime() - d2.getTime() / (1000 * 60 * 60 * 24));\r\n        case 'minutes':\r\n            return (d1.getTime() - d2.getTime() / (1000 * 60 * 60));\r\n        case 'seconds':\r\n        default:\r\n            return (d1.getTime() - d2.getTime()) / 1000;\r\n    }\r\n}\r\nexports.timeBetweenDates = timeBetweenDates;\r\n/**\r\n * format a date\r\n * @param today the date\r\n * @param type one of 'timestamp' | 'timestamp_string' | 'month' | ''\r\n * @returns {string}\r\n */\r\nfunction formatDate(today, type = '') {\r\n    return getToday(type, today);\r\n}\r\nexports.formatDate = formatDate;\r\n/**\r\n * subtract a period from a date and return the new date\r\n * @param date a date to subtract from\r\n * @param period years,months, days,hours,minutes,seconds\r\n * @param duration the number of period to subtract\r\n * @returns {Date}\r\n */\r\nfunction subtractTimePeriod(date, period, duration) {\r\n    date = typeof (date) == 'string' ? new Date(date) : date;\r\n    switch (period) {\r\n        case \"years\":\r\n            return new Date(date.setFullYear(date.getFullYear() - duration));\r\n        case \"months\":\r\n            return new Date(date.setMonth(date.getMonth() - duration));\r\n        case \"hours\":\r\n            return new Date(date.setHours(date.getHours() - duration));\r\n        case \"minutes\":\r\n            return new Date(date.setMinutes(date.getMinutes() - duration));\r\n        case \"seconds\":\r\n            return new Date(date.setSeconds(date.getSeconds() - duration));\r\n        case \"days\":\r\n        default:\r\n            return new Date(date.setDate(date.getDate() - duration));\r\n    }\r\n}\r\nexports.subtractTimePeriod = subtractTimePeriod;\r\n/**\r\n * subtract a period from a date and return the new date\r\n * @param date a date to add to\r\n * @param period years,months, days,hours,minutes,seconds\r\n * @param duration the number of period to subtract\r\n * @returns {Date}\r\n */\r\nfunction addTimePeriod(date, period, duration) {\r\n    date = typeof (date) == 'string' ? new Date(date) : date;\r\n    switch (period) {\r\n        case \"years\":\r\n            return new Date(date.setFullYear(date.getFullYear() - duration));\r\n        case \"months\":\r\n            return new Date(date.setMonth(date.getMonth() - duration));\r\n        case \"hours\":\r\n            return new Date(date.setHours(date.getHours() - duration));\r\n        case \"minutes\":\r\n            return new Date(date.setMinutes(date.getMinutes() - duration));\r\n        case \"seconds\":\r\n            return new Date(date.setSeconds(date.getSeconds() - duration));\r\n        case \"days\":\r\n        default:\r\n            return new Date(date.setDate(date.getDate() - duration));\r\n    }\r\n}\r\nexports.addTimePeriod = addTimePeriod;\r\n/**\r\n * get the week number of the current date or provided date\r\n * @param _date optional\r\n */\r\nfunction getWeekNumber(_date) {\r\n    const currentDate = !_date ? new Date() : new Date(_date);\r\n    Date.now();\r\n    const oneJan = new Date(currentDate.getFullYear(), 0, 1); //1st jan for the year\r\n    let numberOfDays = Math.floor((currentDate.getTime() - oneJan.getTime()) / (24 * 60 * 60 * 1000));\r\n    return Math.ceil(numberOfDays / 7);\r\n}\r\nexports.getWeekNumber = getWeekNumber;\r\n/**\r\n *   get the start and end dates\r\n * @param {String} quick_option\r\n * @returns {Object} {start_date, end_date}\r\n */\r\nfunction setDates(quick_option) {\r\n    const today = new Date();\r\n    let this_week_number = getWeekNumber(today);\r\n    let this_year = getThisYear();\r\n    let last_year = this_year - 1;\r\n    let this_month = today.getMonth(); //0-11\r\n    let last_month = this_month == 0 ? 12 : this_month - 1;\r\n    let next_month = this_month == 11 ? 1 : this_month + 1;\r\n    let start_date;\r\n    let end_date;\r\n    switch (quick_option) {\r\n        case \"all\":\r\n            start_date = formatDate(new Date(2015, 0, 1));\r\n            end_date = getToday();\r\n            break;\r\n        case \"today\":\r\n            start_date = getToday();\r\n            end_date = getToday();\r\n            break;\r\n        case \"yesterday\":\r\n            start_date = formatDate(addDaystoDate(-1, getToday()));\r\n            end_date = formatDate(addDaystoDate(-1, getToday()));\r\n            break;\r\n        case \"this_week\":\r\n            start_date = formatDate(getFirstDayOfWeek(this_week_number, this_year));\r\n            end_date = formatDate(addDaystoDate(6, start_date));\r\n            break;\r\n        case \"last_week\":\r\n            //because this can go into the previous year, we still get that for this week and add some days to it\r\n            start_date = formatDate(addDaystoDate(-6, formatDate(getFirstDayOfWeek(this_week_number, this_year))));\r\n            end_date = formatDate(addDaystoDate(6, start_date));\r\n            break;\r\n        case \"next_week\":\r\n            start_date = formatDate(addDaystoDate(6, formatDate(getFirstDayOfWeek(this_week_number, this_year))));\r\n            end_date = formatDate(addDaystoDate(6, start_date));\r\n            break;\r\n        case \"this_month\":\r\n            start_date = formatDate(new Date(this_year, this_month, 1));\r\n            end_date = formatDate(new Date(this_year, this_month, getLastDayOfMonth(this_month)));\r\n            break;\r\n        case \"last_month\":\r\n            start_date = formatDate(new Date(new Date(this_year, this_month, 1).setMonth(this_month - 1)));\r\n            end_date = formatDate(new Date(new Date(this_year, this_month, getLastDayOfMonth(last_month)).setMonth(this_month - 1)));\r\n            break;\r\n        case \"next_month\":\r\n            start_date = formatDate(new Date(new Date(this_year, this_month, 1).setMonth(this_month + 1)));\r\n            end_date = formatDate(new Date(new Date(this_year, this_month, getLastDayOfMonth(next_month)).setMonth(this_month + 1)));\r\n            break;\r\n        case \"first_quarter\":\r\n            start_date = formatDate(new Date(this_year, 0, 1));\r\n            end_date = formatDate(new Date(this_year, 2, 31));\r\n            break;\r\n        case \"second_quarter\":\r\n            start_date = formatDate(new Date(this_year, 3, 1));\r\n            end_date = formatDate(new Date(this_year, 5, 30));\r\n            break;\r\n        case \"third_quarter\":\r\n            start_date = formatDate(new Date(this_year, 6, 1));\r\n            end_date = formatDate(new Date(this_year, 8, 30));\r\n            break;\r\n        case \"last_quarter\":\r\n            start_date = formatDate(new Date(this_year, 9, 1));\r\n            end_date = formatDate(new Date(this_year, 11, 31));\r\n            break;\r\n        case \"this_year\":\r\n            start_date = formatDate(new Date(this_year, 0, 1));\r\n            end_date = formatDate(new Date(this_year, 11, 31));\r\n            break;\r\n        case \"last_year\":\r\n            start_date = formatDate(new Date(last_year, 0, 1));\r\n            end_date = formatDate(new Date(last_year, 11, 31));\r\n            break;\r\n        case \"today\":\r\n        default:\r\n            start_date = getToday();\r\n            end_date = getToday();\r\n            break;\r\n    }\r\n    return { \"startDate\": start_date, \"endDate\": end_date };\r\n}\r\nexports.setDates = setDates;\r\n\n\n//# sourceURL=webpack://druglaneserver/./src/utils/dateHelper.ts?");

/***/ }),

/***/ "./src/utils/directorySetup.ts":
/*!*************************************!*\
  !*** ./src/utils/directorySetup.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.runFolderCreation = void 0;\r\nconst constants_1 = __webpack_require__(/*! @/utils/constants */ \"./src/utils/constants.ts\");\r\nconst logger_1 = __webpack_require__(/*! @/app/config/logger */ \"./src/app/config/logger.ts\");\r\nconst fs = __importStar(__webpack_require__(/*! fs */ \"fs\"));\r\nconst folders = [constants_1.constants.backup_folder,\r\n    constants_1.constants.internal_backups_path,\r\n    constants_1.constants.backup_temp_location];\r\nconst runFolderCreation = () => folders.forEach(folder => {\r\n    //create folder for backups \r\n    if (!fs.existsSync(folder))\r\n        fs.mkdir(folder, function (err) {\r\n            if (err) {\r\n                console.log('folder not created', err);\r\n                logger_1.logger.error({ message: err });\r\n            }\r\n            else {\r\n                // console.log('folder created')\r\n            }\r\n        });\r\n});\r\nexports.runFolderCreation = runFolderCreation;\r\n\n\n//# sourceURL=webpack://druglaneserver/./src/utils/directorySetup.ts?");

/***/ }),

/***/ "./src/utils/network.ts":
/*!******************************!*\
  !*** ./src/utils/network.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getAuthHeaders = exports.sendEmail = exports.deleteData = exports.postData = exports.getData = void 0;\r\nconst logger_1 = __webpack_require__(/*! @/app/config/logger */ \"./src/app/config/logger.ts\");\r\nconst axios_1 = __importDefault(__webpack_require__(/*! axios */ \"axios\"));\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/utils/constants.ts\");\r\n/**\r\n * make a get call to a url with some optional params\r\n * @param url the url to call\r\n * @param params a map of key-value pairs to append as parameters\r\n * @returns the clientrequest object\r\n */\r\n// export function getData(url:string, params?:Map<string, any>):ClientRequest {\r\n//     if(!net.isOnline) throw new Error(\"Offline\");\r\n//     try {\r\n//         if (params) {\r\n//             let urlParams: string[] = [];\r\n//             params.forEach((value, key) => {\r\n//                 urlParams.push(`${key}=${value}`)\r\n//             });\r\n//             url += \"?\" + urlParams.join(\"&\")\r\n//         }\r\n//         const request = net.request(url);\r\n//         request.on(\"error\", (error) => {\r\n//             console.log(error)\r\n//             logger.error(error)\r\n//             throw new Error(\"Network Error\");\r\n//         })\r\n//         return request;\r\n//     } catch (error) {\r\n//         console.log(error)\r\n//         logger.error({ message: error });\r\n//         throw new Error(\"Network Error\");\r\n//     }\r\n// }\r\nfunction getData(data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            console.log('token', data.token);\r\n            if (data.params) {\r\n                let urlParams = [];\r\n                data.params.forEach((value, key) => {\r\n                    urlParams.push(`${key}=${value}`);\r\n                });\r\n                if (data.url.includes(\"?\")) {\r\n                    data.url += \"&\" + urlParams.join(\"&\");\r\n                }\r\n                else {\r\n                    data.url += \"?\" + urlParams.join(\"&\");\r\n                }\r\n            }\r\n            logger_1.logger.info({ message: `call made to ${data.url} ` });\r\n            const response = yield axios_1.default.get(data.url, {\r\n                headers: getAuthHeaders(data.token)\r\n            });\r\n            logger_1.logger.info({ message: `response received: ${JSON.stringify(response.data)}` });\r\n            return response;\r\n        }\r\n        catch (error) {\r\n            logger_1.logger.info({ message: `error in receiving : ${error}` });\r\n            throw new Error(`Server error: ${error}`);\r\n        }\r\n    });\r\n}\r\nexports.getData = getData;\r\nfunction postData(data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            logger_1.logger.info({ message: `call made to ${data.url}. data: ${JSON.stringify(data.formData)}` });\r\n            const response = yield axios_1.default.post(data.url, data.formData, {\r\n                headers: getAuthHeaders(data.token)\r\n            });\r\n            logger_1.logger.info({ message: `response received: ${JSON.stringify(response.data)}` });\r\n            return response;\r\n        }\r\n        catch (error) {\r\n            logger_1.logger.info({ message: `error in receiving : ${error}` });\r\n            throw new Error(`Server error: ${error}`);\r\n        }\r\n    });\r\n}\r\nexports.postData = postData;\r\nfunction deleteData(data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            logger_1.logger.info({ message: `call made to ${data.url}` });\r\n            const response = yield axios_1.default.delete(data.url, {\r\n                headers: getAuthHeaders(data.token)\r\n            });\r\n            logger_1.logger.info({ message: `response received: ${JSON.stringify(response.data)}` });\r\n            return response;\r\n        }\r\n        catch (error) {\r\n            logger_1.logger.info({ message: `error in receiving : ${error}` });\r\n            throw new Error(`Server error: ${error}`);\r\n        }\r\n    });\r\n}\r\nexports.deleteData = deleteData;\r\nfunction sendEmail(message, recipient, subject) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            const FormData = __webpack_require__(/*! form-data */ \"form-data\");\r\n            const form = new FormData();\r\n            form.append('mails', recipient);\r\n            form.append('message', message);\r\n            form.append('subject', subject);\r\n            const response = yield axios_1.default.post(constants_1.constants.server_url + `/api_admin/sendBulkMail`, form, { headers: form.getHeaders() });\r\n            return response;\r\n        }\r\n        catch (error) {\r\n            logger_1.logger.info({ message: `error sending email : ${error}` });\r\n            throw new Error(`Server error: ${error}`);\r\n        }\r\n        ;\r\n    });\r\n}\r\nexports.sendEmail = sendEmail;\r\nfunction getAuthHeaders(token) {\r\n    const header = {\r\n        'token': token,\r\n        'Content-Type': 'application/json'\r\n    };\r\n    return header;\r\n}\r\nexports.getAuthHeaders = getAuthHeaders;\r\n\n\n//# sourceURL=webpack://druglaneserver/./src/utils/network.ts?");

/***/ }),

/***/ "./src/utils/stringKeys.ts":
/*!*********************************!*\
  !*** ./src/utils/stringKeys.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ADMIN_PASSWORD_SET = exports.SET_ADMIN_PASSWORD = exports.BACKUP_TIME = exports.PORT = exports.RESTART_APPLICATION = exports.CALL_ACTIVATION = exports.ACTIVATION_RESULT = exports.RESTART_SERVER = exports.SERVER_ERROR = exports.SERVER_STARTING = exports.SERVER_STOPPED = exports.SERVER_RUNNING = exports.SERVER_DISCONNECTED = exports.PREFERENCE_SET = exports.SET_PREFERENCE = exports.PREFERENCE_RECEIVED = exports.GET_PREFERENCES = exports.GET_PREFERENCE = exports.SERVER_URL_RECEIVED = exports.GET_SERVER_URL = exports.SERVER_URL_UPDATED = exports.COMPANY_NAME_RECEIVED = exports.GET_COMPANY_NAME = exports.GET_APP_DETAILS = exports.GET_SERVER_STATE = exports.SERVER_MESSAGE_RECEIVED = exports.SERVER_STATE_CHANGED = void 0;\r\nexports.SERVER_STATE_CHANGED = \"server_state_changed\";\r\nexports.SERVER_MESSAGE_RECEIVED = \"server_message_received\";\r\nexports.GET_SERVER_STATE = \"getServerState\";\r\nexports.GET_APP_DETAILS = \"getAppDetails\";\r\nexports.GET_COMPANY_NAME = \"getCompanyName\";\r\nexports.COMPANY_NAME_RECEIVED = \"companyNameReceived\";\r\nexports.SERVER_URL_UPDATED = \"server_url_updated\";\r\nexports.GET_SERVER_URL = \"get_server_url\";\r\nexports.SERVER_URL_RECEIVED = \"server_url_received\";\r\nexports.GET_PREFERENCE = \"getPreference\";\r\nexports.GET_PREFERENCES = \"getPreferences\";\r\nexports.PREFERENCE_RECEIVED = \"preferenceReceived\";\r\nexports.SET_PREFERENCE = \"setPreference\";\r\nexports.PREFERENCE_SET = \"referenceSet\";\r\nexports.SERVER_DISCONNECTED = \"Server Disconnected\";\r\nexports.SERVER_RUNNING = \"Server Running\";\r\nexports.SERVER_STOPPED = \"Server Stopped\";\r\nexports.SERVER_STARTING = \"Server Starting\";\r\nexports.SERVER_ERROR = \"Server Error\";\r\nexports.RESTART_SERVER = \"restart_server\";\r\nexports.ACTIVATION_RESULT = \"activation_result\";\r\nexports.CALL_ACTIVATION = \"call_validation\";\r\nexports.RESTART_APPLICATION = \"restart_application\";\r\nexports.PORT = \"Port\";\r\nexports.BACKUP_TIME = \"Backup Time\";\r\nexports.SET_ADMIN_PASSWORD = \"set_admin_password\";\r\nexports.ADMIN_PASSWORD_SET = \"admin_password_set\";\r\n\n\n//# sourceURL=webpack://druglaneserver/./src/utils/stringKeys.ts?");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = require("axios");

/***/ }),

/***/ "electron":
/*!***************************!*\
  !*** external "electron" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("electron");

/***/ }),

/***/ "electron-context-menu":
/*!****************************************!*\
  !*** external "electron-context-menu" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("electron-context-menu");

/***/ }),

/***/ "electron-store":
/*!*********************************!*\
  !*** external "electron-store" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("electron-store");

/***/ }),

/***/ "form-data":
/*!****************************!*\
  !*** external "form-data" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("form-data");

/***/ }),

/***/ "winston":
/*!**************************!*\
  !*** external "winston" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("winston");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;